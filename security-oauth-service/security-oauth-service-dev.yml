# Spring framework configuration
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/spring6
    username: spring6
    # Using environment variable ENCRYPT_KEY=ENCRYPT_KEY
    # Getting the value with POST localhost:8888/encrypt and the password in its body (using config-server)
    # Raw password: spring6
    password: "{cipher}c8e1f3a8e0f5d7246a0dcbe620b97de51b580a1ef16f80ffafd3989920287278"
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect


# Security configuration
security:
  # JWT configuration
  jwk:
    id: 'dev-57ba-4f7c-b2ac-16c87163c90d'
    public: classpath:/jwt/app.pub
    private: classpath:/jwt/app.key


# Service registration and discovery
eureka:
  client:
    # Pull down a local copy of the registry
    fetchRegistry: true
    healthcheck:
      enabled: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    # Indicates the duration the server waits since it received the last heartbeat before it can evict an instance
    # from its registry. This value should be greater than leaseRenewalIntervalInSeconds
    leaseExpirationDurationInSeconds: 60
    # Indicates the interval of heartbeats that the client sends to the server. The default value is 30 seconds
    # that means that the client will send one heartbeat every 30 seconds.
    leaseRenewalIntervalInSeconds: 45
    # Register the IP of the service rather than the server name (useful when there is no a server-based
    # environment where a service is assigned a DNS-backed host name, usually in Docker, for example)
    preferIpAddress: true


# Internal caches used by the microservice
cache:
  # To manage the configuration of the applications included in the microservice
  registeredClient:
    entryCapacity: 2
    expireInSeconds: 3600
    name: registeredClientCache


# Configure the logs
logging:
  level:
    org:
      springframework:
        # Set the level of the Spring Security package for debugging purpose
        security: trace